{"filter":false,"title":"template.yml","tooltip":"/template.yml","undoManager":{"mark":58,"position":58,"stack":[[{"start":{"row":75,"column":21},"end":{"row":75,"column":60},"action":"remove","lines":["s3://samcloudnative6075/Usage_Layer.zip"],"id":2},{"start":{"row":75,"column":20},"end":{"row":75,"column":21},"action":"remove","lines":[" "]}],[{"start":{"row":75,"column":20},"end":{"row":76,"column":0},"action":"insert","lines":["",""],"id":3},{"start":{"row":76,"column":0},"end":{"row":76,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":76,"column":12},"end":{"row":76,"column":16},"action":"insert","lines":["    "],"id":4}],[{"start":{"row":76,"column":16},"end":{"row":77,"column":38},"action":"insert","lines":[" Bucket: \"samcloudnative6075\"","                Key: \"Usage_Layer.zip\""],"id":5}],[{"start":{"row":76,"column":16},"end":{"row":76,"column":17},"action":"remove","lines":[" "],"id":6}],[{"start":{"row":108,"column":25},"end":{"row":108,"column":69},"action":"remove","lines":["https://samcloudnative6075.s3.amazonaws.com/"],"id":7},{"start":{"row":108,"column":25},"end":{"row":108,"column":43},"action":"insert","lines":["samcloudnative6075"]},{"start":{"row":140,"column":25},"end":{"row":140,"column":69},"action":"remove","lines":["https://samcloudnative6075.s3.amazonaws.com/"]},{"start":{"row":140,"column":25},"end":{"row":140,"column":43},"action":"insert","lines":["samcloudnative6075"]},{"start":{"row":160,"column":25},"end":{"row":160,"column":69},"action":"remove","lines":["https://samcloudnative6075.s3.amazonaws.com/"]},{"start":{"row":160,"column":25},"end":{"row":160,"column":43},"action":"insert","lines":["samcloudnative6075"]},{"start":{"row":187,"column":25},"end":{"row":187,"column":69},"action":"remove","lines":["https://samcloudnative6075.s3.amazonaws.com/"]},{"start":{"row":187,"column":25},"end":{"row":187,"column":43},"action":"insert","lines":["samcloudnative6075"]},{"start":{"row":216,"column":25},"end":{"row":216,"column":69},"action":"remove","lines":["https://samcloudnative6075.s3.amazonaws.com/"]},{"start":{"row":216,"column":25},"end":{"row":216,"column":43},"action":"insert","lines":["samcloudnative6075"]},{"start":{"row":245,"column":25},"end":{"row":245,"column":69},"action":"remove","lines":["https://samcloudnative6075.s3.amazonaws.com/"]},{"start":{"row":245,"column":25},"end":{"row":245,"column":43},"action":"insert","lines":["samcloudnative6075"]},{"start":{"row":274,"column":25},"end":{"row":274,"column":69},"action":"remove","lines":["https://samcloudnative6075.s3.amazonaws.com/"]},{"start":{"row":274,"column":25},"end":{"row":274,"column":43},"action":"insert","lines":["samcloudnative6075"]},{"start":{"row":303,"column":25},"end":{"row":303,"column":69},"action":"remove","lines":["https://samcloudnative6075.s3.amazonaws.com/"]},{"start":{"row":303,"column":25},"end":{"row":303,"column":43},"action":"insert","lines":["samcloudnative6075"]},{"start":{"row":332,"column":25},"end":{"row":332,"column":69},"action":"remove","lines":["https://samcloudnative6075.s3.amazonaws.com/"]},{"start":{"row":332,"column":25},"end":{"row":332,"column":43},"action":"insert","lines":["samcloudnative6075"]}],[{"start":{"row":100,"column":4},"end":{"row":456,"column":79},"action":"remove","lines":["RDSGETLambda:","        Type: 'AWS::Serverless::Function'","        Properties:","            Runtime: python3.6","            Timeout: 5","            FunctionName: Get_request_1","            Handler: Get.lambda_handler","            CodeUri:","                Bucket: \"samcloudnative6075\"","                Key: \"Get.zip\"","            Role:","                !Ref ROLEARN1","            VpcConfig:","                SecurityGroupIds: !Ref SG","                SubnetIds: !Ref SUB","            Environment:","                Variables:","                    SECRETS_DB: !Ref SM1","            Events:","                ApiEventb:","                    Type: Api","                    Properties:","                        RestApiId: !Ref MyApi","                        Path: /instance/{instance-id}/usage","                        Method: GET","                        # NOTE: This endpoint is publicly accessible","                        Auth:","                            Authorizer: MyCognitoAuthorizer","                            AuthorizationScopes:","                                - billing-api/create_billing","","","    RDSCreateTable:","        Type: 'AWS::Serverless::Function'","        Properties:","            Runtime: python3.6","            Timeout: 20","            FunctionName: createdb_1","            Handler: createdb.lambda_handler","            CodeUri:","                Bucket: \"samcloudnative6075\"","                Key: \"createdb.zip\"","            Role:","                !Ref ROLEARN1","            VpcConfig:","                SecurityGroupIds: !Ref SG","                SubnetIds: !Ref SUB","            Environment:","                Variables:","                    SECRETS_DB: !Ref SM1","","","    COGNITOusertoken:","        Type: 'AWS::Serverless::Function'","        Properties:","            Runtime: python3.6","            Timeout: 5","            FunctionName: Cog_user_token_1","            Handler: Cognito-User-Token.lambda_handler","            CodeUri:","                Bucket: \"samcloudnative6075\"","                Key: \"Cognito-User-Token.zip\"","            Role:","                !Ref ROLEARN2","            Environment:","                Variables:","                    SECRETS_COG: !Ref SM2","            Events:","                ApiEventc:","                    Type: Api","                    Properties:","                        RestApiId: !Ref MyApi","                        Path: /cognito/token","                        Method: POST","                        # NOTE: This endpoint is publicly accessible","                        Auth:","                            Authorizer: NONE","      ","","    COGNITOConfirmPass:","        Type: 'AWS::Serverless::Function'","        Properties:","            Runtime: python3.6","            Timeout: 5","            FunctionName: CognitoConfirmForgotPassword_1","            Handler: CognitoConfirmForgotPassword.lambda_handler","            CodeUri:","                Bucket: \"samcloudnative6075\"","                Key: \"CognitoConfirmForgotPassword.zip\"","            Role:","                !Ref ROLEARN2","            Environment:","                Variables:","                    SECRETS_COG: !Ref SM2","            Events:","                ApiEventd: ","                    Type: Api","                    Properties:","                        RestApiId: !Ref MyApi","                        Path: /cognito/confirm-forgot-password","                        Method: POST","                        # NOTE: This endpoint is publicly accessible","                        Auth:","                            Authorizer: MyCognitoAuthorizer","                            AuthorizationScopes:","                                - billing-api/create_billing","","","    COGNITOConfirmSignup:","        Type: 'AWS::Serverless::Function'","        Properties:","            Runtime: python3.6","            Timeout: 5","            FunctionName: CognitoConfirmSignup_1","            Handler: CognitoConfirmSignup.lambda_handler","            CodeUri:","                Bucket: \"samcloudnative6075\"","                Key: \"CognitoConfirmSignup.zip\"","            Role:","                !Ref ROLEARN2","            Environment:","                Variables:","                    SECRETS_COG: !Ref SM2","            Events:","                ApiEvente:","                    Type: Api","                    Properties:          ","                        RestApiId: !Ref MyApi","                        Path: /cognito/confirm-signup","                        Method: PUT","                        # NOTE: This endpoint is publicly accessible","                        Auth:","                            Authorizer: MyCognitoAuthorizer","                            AuthorizationScopes:","                                - billing-api/create_billing","","","    COGNITOforgotpass:","        Type: 'AWS::Serverless::Function'","        Properties:","            Runtime: python3.6","            Timeout: 5","            FunctionName: CognitoForgotPassword_1","            Handler: CognitoForgotPassword.lambda_handler","            CodeUri:","                Bucket: \"samcloudnative6075\"","                Key: \"CognitoForgotPassword.zip\"","            Role:","                !Ref ROLEARN2","            Environment:","                Variables:","                    SECRETS_COG: !Ref SM2","            Events:","                ApiEvente:","                    Type: Api","                    Properties:","                        RestApiId: !Ref MyApi","                        Path: /cognito/forgot-password","                        Method: POST","                        # NOTE: This endpoint is publicly accessible","                        Auth:","                            Authorizer: MyCognitoAuthorizer","                            AuthorizationScopes:","                                - billing-api/create_billing","","","    COGNITOresendcode:","        Type: 'AWS::Serverless::Function'","        Properties:","            Runtime: python3.6","            Timeout: 5","            FunctionName: CognitoResendVerificationCode_1","            Handler: CognitoResendVerificationCode.lambda_handler","            CodeUri:","                Bucket: \"samcloudnative6075\"","                Key: \"CognitoResendVerificationCode.zip\"","            Role:","                !Ref ROLEARN2","            Environment:","                Variables:","                    SECRETS_COG: !Ref SM2","            Events:","                ApiEventq:","                    Type: Api","                    Properties:","                        RestApiId: !Ref MyApi","                        Path: /cognito/resend-verification-code","                        Method: POST","                        # NOTE: This endpoint is publicly accessible","                        Auth:","                            Authorizer: MyCognitoAuthorizer","                            AuthorizationScopes: ","                                - billing-api/create_billing","","","    COGNITOPoolsignup:","        Type: 'AWS::Serverless::Function'","        Properties:","            Runtime: python3.6","            Timeout: 5","            FunctionName: CognitoUserPoolSignUp_1","            Handler: CognitoUserPoolSignUp.lambda_handler","            CodeUri:","                Bucket: \"samcloudnative6075\"","                Key: \"CognitoUserPoolSignUp.zip\"","            Role:","                !Ref ROLEARN2","            Environment:","                Variables:","                    SECRETS_COG: !Ref SM2","            Events:","                ApiEventh:","                    Type: Api","                    Properties:","                        RestApiId: !Ref MyApi","                        Path: /cognito/signup","                        Method: POST","                        # NOTE: This endpoint is publicly accessible","                        Auth:","                            Authorizer: MyCognitoAuthorizer","                            AuthorizationScopes: ","                                - billing-api/create_billing","","    ","    SecretsLam:","        Type: 'AWS::Serverless::Function'","        Properties:","            Runtime: python3.6","            Timeout: 20","            FunctionName: test_lambda_cf_1","            Handler: test.lambda_handler","            CodeUri:","                Bucket: \"samcloudnative6075\"","                Key: \"test.zip\"","            Role:","                !Ref ROLEARN2","","","    MyDB:","        Type: AWS::RDS::DBInstance","        Properties:","            AllocatedStorage: '5'","            MasterUsername: !Ref DBUser","            MasterUserPassword: !Ref DBPassword","            Engine: MySQL","            DBInstanceClass: db.t3.small","            VPCSecurityGroups: !Ref SG","","","    SM1:","        Type: 'AWS::SecretsManager::Secret'","        Properties:","            Name: MySecretForDB","            Description: This secret has a hardcoded DB password in SecretString","            SecretString: !Sub '{\"username\":\"${DBUser}\" ,\"password\":\"${DBPassword}\",\"host\":\"${MyDB.Endpoint.Address}\"}'","    ","          ","    SM2:","        DependsOn: SecretCog","        Type: 'AWS::SecretsManager::Secret'","        Properties:","            Name: MySecretForCognito","            Description: This secret has a hardcoded password in SecretString for Cognito based resources","            SecretString: !Sub '{\"USER_POOL_ID\":\"${UserPool}\" ,\"CLIENT_ID\":\"${MyApp}\",\"CLIENT_SECRET\":\"${SecretCog.client_secret}\"}' ","            ","","    UserPool:","        Type: \"AWS::Cognito::UserPool\"","        Properties:","            UserPoolName: !Sub ${AuthName}-user-pool","            UsernameConfiguration:","                CaseSensitive: false","            AdminCreateUserConfig:","                AllowAdminCreateUserOnly: False","            AccountRecoverySetting:","                RecoveryMechanisms: ","                  - Name: admin_only","                    Priority: 1","            Schema:","                - Name: \"name\"","                  AttributeDataType: String","                  Mutable: false","                  Required: true","","            ","    MyApp:","        DependsOn: UserPoolResourceServer","        Type: AWS::Cognito::UserPoolClient","        Properties:","            UserPoolId: !Ref UserPool","            AllowedOAuthFlows: ","                - client_credentials","            GenerateSecret: true","            PreventUserExistenceErrors: LEGACY","            CallbackURLs: ","                - http://localhost:3000","            DefaultRedirectURI: \"http://localhost:3000\"","            LogoutURLs: ","                - \"http://localhost:3000\"","            SupportedIdentityProviders:","                - COGNITO","            ExplicitAuthFlows:","                - ALLOW_ADMIN_USER_PASSWORD_AUTH","                - ALLOW_CUSTOM_AUTH","                - ALLOW_USER_SRP_AUTH","                - ALLOW_REFRESH_TOKEN_AUTH","            AllowedOAuthScopes:","                - billing-api/read_billing","                - billing-api/delete_billing","                - billing-api/create_billing","","","    UserPoolResourceServer: ","        Type: AWS::Cognito::UserPoolResourceServer","        Properties: ","            UserPoolId: !Ref UserPool","            Identifier: \"billing-api\"","            Name: \"billing-api\"","            Scopes: ","                - ScopeName: \"read_billing\" ","                  ScopeDescription: \"Read Billing\" ","                - ScopeName: \"delete_billing\"","                  ScopeDescription: \"Delete Billing\"","                - ScopeName: \"create_billing\"","                  ScopeDescription: \"Create Billing\"","","    ","    DomainName:","        Type: AWS::Cognito::UserPoolDomain","        Properties:","            Domain: \"api-billing-6075\"","            UserPoolId: !Ref UserPool","    ","                  ","    SecretCog:","        DependsOn: ","            - UserPool","            - MyApp","        Type: \"Custom::CLIENT\"","        Properties:","          ServiceToken: !GetAtt SecretsLam.Arn","          PoolId: !Ref UserPool","          ClientId: !Ref MyApp","","","    CreateTable:","        DependsOn: MyDB","        Type: \"Custom::CLIENT\"","        Properties:","            ServiceToken: !GetAtt RDSCreateTable.Arn","","","Outputs:","    SAMApi:","        Description: API Gateway endpoint URL for DEV stage for RocketCX Cloud Native function","        Value:","            Fn::Sub: https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/"],"id":60}],[{"start":{"row":76,"column":24},"end":{"row":76,"column":44},"action":"remove","lines":["\"samcloudnative6075\""],"id":61},{"start":{"row":76,"column":24},"end":{"row":76,"column":25},"action":"insert","lines":["s"]},{"start":{"row":76,"column":25},"end":{"row":76,"column":26},"action":"insert","lines":["a"]},{"start":{"row":76,"column":26},"end":{"row":76,"column":27},"action":"insert","lines":["m"]},{"start":{"row":76,"column":27},"end":{"row":76,"column":28},"action":"insert","lines":["/"]}],[{"start":{"row":77,"column":36},"end":{"row":77,"column":37},"action":"remove","lines":["p"],"id":62},{"start":{"row":77,"column":35},"end":{"row":77,"column":36},"action":"remove","lines":["i"]},{"start":{"row":77,"column":34},"end":{"row":77,"column":35},"action":"remove","lines":["z"]}],[{"start":{"row":77,"column":34},"end":{"row":77,"column":35},"action":"insert","lines":["p"],"id":63},{"start":{"row":77,"column":35},"end":{"row":77,"column":36},"action":"insert","lines":["y"]}],[{"start":{"row":76,"column":16},"end":{"row":77,"column":37},"action":"remove","lines":["Bucket: sam/","                Key: \"Usage_Layer.py\""],"id":64},{"start":{"row":76,"column":12},"end":{"row":76,"column":16},"action":"remove","lines":["    "]},{"start":{"row":76,"column":8},"end":{"row":76,"column":12},"action":"remove","lines":["    "]},{"start":{"row":76,"column":4},"end":{"row":76,"column":8},"action":"remove","lines":["    "]},{"start":{"row":76,"column":0},"end":{"row":76,"column":4},"action":"remove","lines":["    "]},{"start":{"row":75,"column":20},"end":{"row":76,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":75,"column":20},"end":{"row":75,"column":21},"action":"insert","lines":[" "],"id":65},{"start":{"row":75,"column":21},"end":{"row":75,"column":22},"action":"insert","lines":["."]},{"start":{"row":75,"column":22},"end":{"row":75,"column":23},"action":"insert","lines":["/"]}],[{"start":{"row":75,"column":23},"end":{"row":75,"column":24},"action":"insert","lines":["U"],"id":66},{"start":{"row":75,"column":24},"end":{"row":75,"column":25},"action":"insert","lines":["s"]},{"start":{"row":75,"column":25},"end":{"row":75,"column":26},"action":"insert","lines":["a"]},{"start":{"row":75,"column":26},"end":{"row":75,"column":27},"action":"insert","lines":["g"]},{"start":{"row":75,"column":27},"end":{"row":75,"column":28},"action":"insert","lines":["e"]}],[{"start":{"row":75,"column":23},"end":{"row":75,"column":28},"action":"remove","lines":["Usage"],"id":67},{"start":{"row":75,"column":23},"end":{"row":75,"column":34},"action":"insert","lines":["Usage_Layer"]}],[{"start":{"row":75,"column":34},"end":{"row":75,"column":35},"action":"insert","lines":["."],"id":68},{"start":{"row":75,"column":35},"end":{"row":75,"column":36},"action":"insert","lines":["p"]},{"start":{"row":75,"column":36},"end":{"row":75,"column":37},"action":"insert","lines":["y"]}],[{"start":{"row":75,"column":36},"end":{"row":75,"column":37},"action":"remove","lines":["y"],"id":69},{"start":{"row":75,"column":35},"end":{"row":75,"column":36},"action":"remove","lines":["p"]},{"start":{"row":75,"column":34},"end":{"row":75,"column":35},"action":"remove","lines":["."]},{"start":{"row":75,"column":33},"end":{"row":75,"column":34},"action":"remove","lines":["r"]},{"start":{"row":75,"column":32},"end":{"row":75,"column":33},"action":"remove","lines":["e"]},{"start":{"row":75,"column":31},"end":{"row":75,"column":32},"action":"remove","lines":["y"]},{"start":{"row":75,"column":30},"end":{"row":75,"column":31},"action":"remove","lines":["a"]},{"start":{"row":75,"column":29},"end":{"row":75,"column":30},"action":"remove","lines":["L"]},{"start":{"row":75,"column":28},"end":{"row":75,"column":29},"action":"remove","lines":["_"]},{"start":{"row":75,"column":27},"end":{"row":75,"column":28},"action":"remove","lines":["e"]},{"start":{"row":75,"column":26},"end":{"row":75,"column":27},"action":"remove","lines":["g"]},{"start":{"row":75,"column":25},"end":{"row":75,"column":26},"action":"remove","lines":["a"]},{"start":{"row":75,"column":24},"end":{"row":75,"column":25},"action":"remove","lines":["s"]},{"start":{"row":75,"column":23},"end":{"row":75,"column":24},"action":"remove","lines":["U"]}],[{"start":{"row":75,"column":22},"end":{"row":75,"column":23},"action":"remove","lines":["/"],"id":70},{"start":{"row":75,"column":21},"end":{"row":75,"column":22},"action":"remove","lines":["."]}],[{"start":{"row":75,"column":21},"end":{"row":75,"column":22},"action":"insert","lines":["s"],"id":71},{"start":{"row":75,"column":22},"end":{"row":75,"column":23},"action":"insert","lines":["a"]},{"start":{"row":75,"column":23},"end":{"row":75,"column":24},"action":"insert","lines":["m"]},{"start":{"row":75,"column":24},"end":{"row":75,"column":25},"action":"insert","lines":["/"]}],[{"start":{"row":0,"column":0},"end":{"row":98,"column":4},"action":"remove","lines":["Transform: AWS::Serverless-2016-10-31","","Description:","    SAM template to create Cloud Native Environment for Rocket CX","","","Parameters:","    VPCRDS:","        Type: 'List<AWS::EC2::VPC::Id>'","        Description: Name of VPC where RDS resides","","","    SG:","        Type: 'List<AWS::EC2::SecurityGroup::Id>'","        Description: Name of Security Group","    ","        ","    SUB:","        Type: 'List<AWS::EC2::Subnet::Id>'","        Description: Name of Subents","","","    ROLEARN1:","        Type: String","        Description: ARN for Database Lambdas","","","    ROLEARN2:","        Type: String","        Description: Role ARN for Cognito Lambdas","","","    AuthName:","        Type: String","        Description: Unique Auth Name for Cognito Resources","","    ","    DBUser: ","        Description: The database admin account username","        Type: String","        MinLength: 1","        MaxLength: 16","        AllowedPattern: \"[a-zA-Z][a-zA-Z0-9]*\"","        ConstraintDescription: must begin with a letter and contain only alphanumeric characters.","        ","        ","    DBPassword:","        Description: The database admin account password","        Type: String","        MinLength: 1","        MaxLength: 41","        AllowedPattern: \"[a-zA-Z0-9]*\"","","","Resources:","    MyApi:","        DependsOn: SM2","        Type: 'AWS::Serverless::Api'","        Properties:","            StageName: dev","            Cors: \"'*'\"","            Auth:","                DefaultAuthorizer: MyCognitoAuthorizer","                Authorizers:","                    MyCognitoAuthorizer:","                        UserPoolArn: !GetAtt UserPool.Arn","      ","","    RDSPOSTLambda:","        Type: 'AWS::Serverless::Function'","        Properties:","            Runtime: python3.6","            Timeout: 5","            FunctionName: RDS_POST_Lambda_1","            Handler: Usage_Layer.lambda_handler","            CodeUri: sam/","            Role:","                !Ref ROLEARN1","            VpcConfig:","                SecurityGroupIds: !Ref SG","                SubnetIds: !Ref SUB","            Environment:","                Variables:","                    SECRETS_DB: !Ref SM1","            Events:","                ApiEventa:","                    Type: Api","                    Properties:","                        RestApiId: !Ref MyApi","                        Path: /instance/{instance-id}/usage","                        Method: POST","                        # NOTE: This endpoint is publicly accessible","                        Auth:","                            Authorizer: MyCognitoAuthorizer","                            AuthorizationScopes:","                                - billing-api/create_billing","","","    "],"id":72},{"start":{"row":0,"column":0},"end":{"row":456,"column":79},"action":"insert","lines":["Transform: AWS::Serverless-2016-10-31","","Description:","    SAM template to create Cloud Native Environment for Rocket CX","","","Parameters:","    VPCRDS:","        Type: 'List<AWS::EC2::VPC::Id>'","        Description: Name of VPC where RDS resides","","","    SG:","        Type: 'List<AWS::EC2::SecurityGroup::Id>'","        Description: Name of Security Group","    ","        ","    SUB:","        Type: 'List<AWS::EC2::Subnet::Id>'","        Description: Name of Subents","","","    ROLEARN1:","        Type: String","        Description: ARN for Database Lambdas","","","    ROLEARN2:","        Type: String","        Description: Role ARN for Cognito Lambdas","","","    AuthName:","        Type: String","        Description: Unique Auth Name for Cognito Resources","","    ","    DBUser: ","        Description: The database admin account username","        Type: String","        MinLength: 1","        MaxLength: 16","        AllowedPattern: \"[a-zA-Z][a-zA-Z0-9]*\"","        ConstraintDescription: must begin with a letter and contain only alphanumeric characters.","        ","        ","    DBPassword:","        Description: The database admin account password","        Type: String","        MinLength: 1","        MaxLength: 41","        AllowedPattern: \"[a-zA-Z0-9]*\"","","","Resources:","    MyApi:","        DependsOn: SM2","        Type: 'AWS::Serverless::Api'","        Properties:","            StageName: dev","            Cors: \"'*'\"","            Auth:","                DefaultAuthorizer: MyCognitoAuthorizer","                Authorizers:","                    MyCognitoAuthorizer:","                        UserPoolArn: !GetAtt UserPool.Arn","      ","","    RDSPOSTLambda:","        Type: 'AWS::Serverless::Function'","        Properties:","            Runtime: python3.6","            Timeout: 5","            FunctionName: RDS_POST_Lambda_1","            Handler: Usage_Layer.lambda_handler","            CodeUri:","                Bucket: \"samcloudnative6075\"","                Key: \"Usage_Layer.zip\"","            Role:","                !Ref ROLEARN1","            VpcConfig:","                SecurityGroupIds: !Ref SG","                SubnetIds: !Ref SUB","            Environment:","                Variables:","                    SECRETS_DB: !Ref SM1","            Events:","                ApiEventa:","                    Type: Api","                    Properties:","                        RestApiId: !Ref MyApi","                        Path: /instance/{instance-id}/usage","                        Method: POST","                        # NOTE: This endpoint is publicly accessible","                        Auth:","                            Authorizer: MyCognitoAuthorizer","                            AuthorizationScopes:","                                - billing-api/create_billing","","","    RDSGETLambda:","        Type: 'AWS::Serverless::Function'","        Properties:","            Runtime: python3.6","            Timeout: 5","            FunctionName: Get_request_1","            Handler: Get.lambda_handler","            CodeUri:","                Bucket: \"samcloudnative6075\"","                Key: \"Get.zip\"","            Role:","                !Ref ROLEARN1","            VpcConfig:","                SecurityGroupIds: !Ref SG","                SubnetIds: !Ref SUB","            Environment:","                Variables:","                    SECRETS_DB: !Ref SM1","            Events:","                ApiEventb:","                    Type: Api","                    Properties:","                        RestApiId: !Ref MyApi","                        Path: /instance/{instance-id}/usage","                        Method: GET","                        # NOTE: This endpoint is publicly accessible","                        Auth:","                            Authorizer: MyCognitoAuthorizer","                            AuthorizationScopes:","                                - billing-api/create_billing","","","    RDSCreateTable:","        Type: 'AWS::Serverless::Function'","        Properties:","            Runtime: python3.6","            Timeout: 20","            FunctionName: createdb_1","            Handler: createdb.lambda_handler","            CodeUri:","                Bucket: \"samcloudnative6075\"","                Key: \"createdb.zip\"","            Role:","                !Ref ROLEARN1","            VpcConfig:","                SecurityGroupIds: !Ref SG","                SubnetIds: !Ref SUB","            Environment:","                Variables:","                    SECRETS_DB: !Ref SM1","","","    COGNITOusertoken:","        Type: 'AWS::Serverless::Function'","        Properties:","            Runtime: python3.6","            Timeout: 5","            FunctionName: Cog_user_token_1","            Handler: Cognito-User-Token.lambda_handler","            CodeUri:","                Bucket: \"samcloudnative6075\"","                Key: \"Cognito-User-Token.zip\"","            Role:","                !Ref ROLEARN2","            Environment:","                Variables:","                    SECRETS_COG: !Ref SM2","            Events:","                ApiEventc:","                    Type: Api","                    Properties:","                        RestApiId: !Ref MyApi","                        Path: /cognito/token","                        Method: POST","                        # NOTE: This endpoint is publicly accessible","                        Auth:","                            Authorizer: NONE","      ","","    COGNITOConfirmPass:","        Type: 'AWS::Serverless::Function'","        Properties:","            Runtime: python3.6","            Timeout: 5","            FunctionName: CognitoConfirmForgotPassword_1","            Handler: CognitoConfirmForgotPassword.lambda_handler","            CodeUri:","                Bucket: \"samcloudnative6075\"","                Key: \"CognitoConfirmForgotPassword.zip\"","            Role:","                !Ref ROLEARN2","            Environment:","                Variables:","                    SECRETS_COG: !Ref SM2","            Events:","                ApiEventd: ","                    Type: Api","                    Properties:","                        RestApiId: !Ref MyApi","                        Path: /cognito/confirm-forgot-password","                        Method: POST","                        # NOTE: This endpoint is publicly accessible","                        Auth:","                            Authorizer: MyCognitoAuthorizer","                            AuthorizationScopes:","                                - billing-api/create_billing","","","    COGNITOConfirmSignup:","        Type: 'AWS::Serverless::Function'","        Properties:","            Runtime: python3.6","            Timeout: 5","            FunctionName: CognitoConfirmSignup_1","            Handler: CognitoConfirmSignup.lambda_handler","            CodeUri:","                Bucket: \"samcloudnative6075\"","                Key: \"CognitoConfirmSignup.zip\"","            Role:","                !Ref ROLEARN2","            Environment:","                Variables:","                    SECRETS_COG: !Ref SM2","            Events:","                ApiEvente:","                    Type: Api","                    Properties:          ","                        RestApiId: !Ref MyApi","                        Path: /cognito/confirm-signup","                        Method: PUT","                        # NOTE: This endpoint is publicly accessible","                        Auth:","                            Authorizer: MyCognitoAuthorizer","                            AuthorizationScopes:","                                - billing-api/create_billing","","","    COGNITOforgotpass:","        Type: 'AWS::Serverless::Function'","        Properties:","            Runtime: python3.6","            Timeout: 5","            FunctionName: CognitoForgotPassword_1","            Handler: CognitoForgotPassword.lambda_handler","            CodeUri:","                Bucket: \"samcloudnative6075\"","                Key: \"CognitoForgotPassword.zip\"","            Role:","                !Ref ROLEARN2","            Environment:","                Variables:","                    SECRETS_COG: !Ref SM2","            Events:","                ApiEvente:","                    Type: Api","                    Properties:","                        RestApiId: !Ref MyApi","                        Path: /cognito/forgot-password","                        Method: POST","                        # NOTE: This endpoint is publicly accessible","                        Auth:","                            Authorizer: MyCognitoAuthorizer","                            AuthorizationScopes:","                                - billing-api/create_billing","","","    COGNITOresendcode:","        Type: 'AWS::Serverless::Function'","        Properties:","            Runtime: python3.6","            Timeout: 5","            FunctionName: CognitoResendVerificationCode_1","            Handler: CognitoResendVerificationCode.lambda_handler","            CodeUri:","                Bucket: \"samcloudnative6075\"","                Key: \"CognitoResendVerificationCode.zip\"","            Role:","                !Ref ROLEARN2","            Environment:","                Variables:","                    SECRETS_COG: !Ref SM2","            Events:","                ApiEventq:","                    Type: Api","                    Properties:","                        RestApiId: !Ref MyApi","                        Path: /cognito/resend-verification-code","                        Method: POST","                        # NOTE: This endpoint is publicly accessible","                        Auth:","                            Authorizer: MyCognitoAuthorizer","                            AuthorizationScopes: ","                                - billing-api/create_billing","","","    COGNITOPoolsignup:","        Type: 'AWS::Serverless::Function'","        Properties:","            Runtime: python3.6","            Timeout: 5","            FunctionName: CognitoUserPoolSignUp_1","            Handler: CognitoUserPoolSignUp.lambda_handler","            CodeUri:","                Bucket: \"samcloudnative6075\"","                Key: \"CognitoUserPoolSignUp.zip\"","            Role:","                !Ref ROLEARN2","            Environment:","                Variables:","                    SECRETS_COG: !Ref SM2","            Events:","                ApiEventh:","                    Type: Api","                    Properties:","                        RestApiId: !Ref MyApi","                        Path: /cognito/signup","                        Method: POST","                        # NOTE: This endpoint is publicly accessible","                        Auth:","                            Authorizer: MyCognitoAuthorizer","                            AuthorizationScopes: ","                                - billing-api/create_billing","","    ","    SecretsLam:","        Type: 'AWS::Serverless::Function'","        Properties:","            Runtime: python3.6","            Timeout: 20","            FunctionName: test_lambda_cf_1","            Handler: test.lambda_handler","            CodeUri:","                Bucket: \"samcloudnative6075\"","                Key: \"test.zip\"","            Role:","                !Ref ROLEARN2","","","    MyDB:","        Type: AWS::RDS::DBInstance","        Properties:","            AllocatedStorage: '5'","            MasterUsername: !Ref DBUser","            MasterUserPassword: !Ref DBPassword","            Engine: MySQL","            DBInstanceClass: db.t3.small","            VPCSecurityGroups: !Ref SG","","","    SM1:","        Type: 'AWS::SecretsManager::Secret'","        Properties:","            Name: MySecretForDB","            Description: This secret has a hardcoded DB password in SecretString","            SecretString: !Sub '{\"username\":\"${DBUser}\" ,\"password\":\"${DBPassword}\",\"host\":\"${MyDB.Endpoint.Address}\"}'","    ","          ","    SM2:","        DependsOn: SecretCog","        Type: 'AWS::SecretsManager::Secret'","        Properties:","            Name: MySecretForCognito","            Description: This secret has a hardcoded password in SecretString for Cognito based resources","            SecretString: !Sub '{\"USER_POOL_ID\":\"${UserPool}\" ,\"CLIENT_ID\":\"${MyApp}\",\"CLIENT_SECRET\":\"${SecretCog.client_secret}\"}' ","            ","","    UserPool:","        Type: \"AWS::Cognito::UserPool\"","        Properties:","            UserPoolName: !Sub ${AuthName}-user-pool","            UsernameConfiguration:","                CaseSensitive: false","            AdminCreateUserConfig:","                AllowAdminCreateUserOnly: False","            AccountRecoverySetting:","                RecoveryMechanisms: ","                  - Name: admin_only","                    Priority: 1","            Schema:","                - Name: \"name\"","                  AttributeDataType: String","                  Mutable: false","                  Required: true","","            ","    MyApp:","        DependsOn: UserPoolResourceServer","        Type: AWS::Cognito::UserPoolClient","        Properties:","            UserPoolId: !Ref UserPool","            AllowedOAuthFlows: ","                - client_credentials","            GenerateSecret: true","            PreventUserExistenceErrors: LEGACY","            CallbackURLs: ","                - http://localhost:3000","            DefaultRedirectURI: \"http://localhost:3000\"","            LogoutURLs: ","                - \"http://localhost:3000\"","            SupportedIdentityProviders:","                - COGNITO","            ExplicitAuthFlows:","                - ALLOW_ADMIN_USER_PASSWORD_AUTH","                - ALLOW_CUSTOM_AUTH","                - ALLOW_USER_SRP_AUTH","                - ALLOW_REFRESH_TOKEN_AUTH","            AllowedOAuthScopes:","                - billing-api/read_billing","                - billing-api/delete_billing","                - billing-api/create_billing","","","    UserPoolResourceServer: ","        Type: AWS::Cognito::UserPoolResourceServer","        Properties: ","            UserPoolId: !Ref UserPool","            Identifier: \"billing-api\"","            Name: \"billing-api\"","            Scopes: ","                - ScopeName: \"read_billing\" ","                  ScopeDescription: \"Read Billing\" ","                - ScopeName: \"delete_billing\"","                  ScopeDescription: \"Delete Billing\"","                - ScopeName: \"create_billing\"","                  ScopeDescription: \"Create Billing\"","","    ","    DomainName:","        Type: AWS::Cognito::UserPoolDomain","        Properties:","            Domain: \"api-billing-6075\"","            UserPoolId: !Ref UserPool","    ","                  ","    SecretCog:","        DependsOn: ","            - UserPool","            - MyApp","        Type: \"Custom::CLIENT\"","        Properties:","          ServiceToken: !GetAtt SecretsLam.Arn","          PoolId: !Ref UserPool","          ClientId: !Ref MyApp","","","    CreateTable:","        DependsOn: MyDB","        Type: \"Custom::CLIENT\"","        Properties:","            ServiceToken: !GetAtt RDSCreateTable.Arn","","","Outputs:","    SAMApi:","        Description: API Gateway endpoint URL for DEV stage for RocketCX Cloud Native function","        Value:","            Fn::Sub: https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/"]}],[{"start":{"row":208,"column":0},"end":{"row":456,"column":79},"action":"remove","lines":["    COGNITOConfirmSignup:","        Type: 'AWS::Serverless::Function'","        Properties:","            Runtime: python3.6","            Timeout: 5","            FunctionName: CognitoConfirmSignup_1","            Handler: CognitoConfirmSignup.lambda_handler","            CodeUri:","                Bucket: \"samcloudnative6075\"","                Key: \"CognitoConfirmSignup.zip\"","            Role:","                !Ref ROLEARN2","            Environment:","                Variables:","                    SECRETS_COG: !Ref SM2","            Events:","                ApiEvente:","                    Type: Api","                    Properties:          ","                        RestApiId: !Ref MyApi","                        Path: /cognito/confirm-signup","                        Method: PUT","                        # NOTE: This endpoint is publicly accessible","                        Auth:","                            Authorizer: MyCognitoAuthorizer","                            AuthorizationScopes:","                                - billing-api/create_billing","","","    COGNITOforgotpass:","        Type: 'AWS::Serverless::Function'","        Properties:","            Runtime: python3.6","            Timeout: 5","            FunctionName: CognitoForgotPassword_1","            Handler: CognitoForgotPassword.lambda_handler","            CodeUri:","                Bucket: \"samcloudnative6075\"","                Key: \"CognitoForgotPassword.zip\"","            Role:","                !Ref ROLEARN2","            Environment:","                Variables:","                    SECRETS_COG: !Ref SM2","            Events:","                ApiEvente:","                    Type: Api","                    Properties:","                        RestApiId: !Ref MyApi","                        Path: /cognito/forgot-password","                        Method: POST","                        # NOTE: This endpoint is publicly accessible","                        Auth:","                            Authorizer: MyCognitoAuthorizer","                            AuthorizationScopes:","                                - billing-api/create_billing","","","    COGNITOresendcode:","        Type: 'AWS::Serverless::Function'","        Properties:","            Runtime: python3.6","            Timeout: 5","            FunctionName: CognitoResendVerificationCode_1","            Handler: CognitoResendVerificationCode.lambda_handler","            CodeUri:","                Bucket: \"samcloudnative6075\"","                Key: \"CognitoResendVerificationCode.zip\"","            Role:","                !Ref ROLEARN2","            Environment:","                Variables:","                    SECRETS_COG: !Ref SM2","            Events:","                ApiEventq:","                    Type: Api","                    Properties:","                        RestApiId: !Ref MyApi","                        Path: /cognito/resend-verification-code","                        Method: POST","                        # NOTE: This endpoint is publicly accessible","                        Auth:","                            Authorizer: MyCognitoAuthorizer","                            AuthorizationScopes: ","                                - billing-api/create_billing","","","    COGNITOPoolsignup:","        Type: 'AWS::Serverless::Function'","        Properties:","            Runtime: python3.6","            Timeout: 5","            FunctionName: CognitoUserPoolSignUp_1","            Handler: CognitoUserPoolSignUp.lambda_handler","            CodeUri:","                Bucket: \"samcloudnative6075\"","                Key: \"CognitoUserPoolSignUp.zip\"","            Role:","                !Ref ROLEARN2","            Environment:","                Variables:","                    SECRETS_COG: !Ref SM2","            Events:","                ApiEventh:","                    Type: Api","                    Properties:","                        RestApiId: !Ref MyApi","                        Path: /cognito/signup","                        Method: POST","                        # NOTE: This endpoint is publicly accessible","                        Auth:","                            Authorizer: MyCognitoAuthorizer","                            AuthorizationScopes: ","                                - billing-api/create_billing","","    ","    SecretsLam:","        Type: 'AWS::Serverless::Function'","        Properties:","            Runtime: python3.6","            Timeout: 20","            FunctionName: test_lambda_cf_1","            Handler: test.lambda_handler","            CodeUri:","                Bucket: \"samcloudnative6075\"","                Key: \"test.zip\"","            Role:","                !Ref ROLEARN2","","","    MyDB:","        Type: AWS::RDS::DBInstance","        Properties:","            AllocatedStorage: '5'","            MasterUsername: !Ref DBUser","            MasterUserPassword: !Ref DBPassword","            Engine: MySQL","            DBInstanceClass: db.t3.small","            VPCSecurityGroups: !Ref SG","","","    SM1:","        Type: 'AWS::SecretsManager::Secret'","        Properties:","            Name: MySecretForDB","            Description: This secret has a hardcoded DB password in SecretString","            SecretString: !Sub '{\"username\":\"${DBUser}\" ,\"password\":\"${DBPassword}\",\"host\":\"${MyDB.Endpoint.Address}\"}'","    ","          ","    SM2:","        DependsOn: SecretCog","        Type: 'AWS::SecretsManager::Secret'","        Properties:","            Name: MySecretForCognito","            Description: This secret has a hardcoded password in SecretString for Cognito based resources","            SecretString: !Sub '{\"USER_POOL_ID\":\"${UserPool}\" ,\"CLIENT_ID\":\"${MyApp}\",\"CLIENT_SECRET\":\"${SecretCog.client_secret}\"}' ","            ","","    UserPool:","        Type: \"AWS::Cognito::UserPool\"","        Properties:","            UserPoolName: !Sub ${AuthName}-user-pool","            UsernameConfiguration:","                CaseSensitive: false","            AdminCreateUserConfig:","                AllowAdminCreateUserOnly: False","            AccountRecoverySetting:","                RecoveryMechanisms: ","                  - Name: admin_only","                    Priority: 1","            Schema:","                - Name: \"name\"","                  AttributeDataType: String","                  Mutable: false","                  Required: true","","            ","    MyApp:","        DependsOn: UserPoolResourceServer","        Type: AWS::Cognito::UserPoolClient","        Properties:","            UserPoolId: !Ref UserPool","            AllowedOAuthFlows: ","                - client_credentials","            GenerateSecret: true","            PreventUserExistenceErrors: LEGACY","            CallbackURLs: ","                - http://localhost:3000","            DefaultRedirectURI: \"http://localhost:3000\"","            LogoutURLs: ","                - \"http://localhost:3000\"","            SupportedIdentityProviders:","                - COGNITO","            ExplicitAuthFlows:","                - ALLOW_ADMIN_USER_PASSWORD_AUTH","                - ALLOW_CUSTOM_AUTH","                - ALLOW_USER_SRP_AUTH","                - ALLOW_REFRESH_TOKEN_AUTH","            AllowedOAuthScopes:","                - billing-api/read_billing","                - billing-api/delete_billing","                - billing-api/create_billing","","","    UserPoolResourceServer: ","        Type: AWS::Cognito::UserPoolResourceServer","        Properties: ","            UserPoolId: !Ref UserPool","            Identifier: \"billing-api\"","            Name: \"billing-api\"","            Scopes: ","                - ScopeName: \"read_billing\" ","                  ScopeDescription: \"Read Billing\" ","                - ScopeName: \"delete_billing\"","                  ScopeDescription: \"Delete Billing\"","                - ScopeName: \"create_billing\"","                  ScopeDescription: \"Create Billing\"","","    ","    DomainName:","        Type: AWS::Cognito::UserPoolDomain","        Properties:","            Domain: \"api-billing-6075\"","            UserPoolId: !Ref UserPool","    ","                  ","    SecretCog:","        DependsOn: ","            - UserPool","            - MyApp","        Type: \"Custom::CLIENT\"","        Properties:","          ServiceToken: !GetAtt SecretsLam.Arn","          PoolId: !Ref UserPool","          ClientId: !Ref MyApp","","","    CreateTable:","        DependsOn: MyDB","        Type: \"Custom::CLIENT\"","        Properties:","            ServiceToken: !GetAtt RDSCreateTable.Arn","","","Outputs:","    SAMApi:","        Description: API Gateway endpoint URL for DEV stage for RocketCX Cloud Native function","        Value:","            Fn::Sub: https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/"],"id":73}],[{"start":{"row":151,"column":0},"end":{"row":207,"column":0},"action":"remove","lines":["","    COGNITOusertoken:","        Type: 'AWS::Serverless::Function'","        Properties:","            Runtime: python3.6","            Timeout: 5","            FunctionName: Cog_user_token_1","            Handler: Cognito-User-Token.lambda_handler","            CodeUri:","                Bucket: \"samcloudnative6075\"","                Key: \"Cognito-User-Token.zip\"","            Role:","                !Ref ROLEARN2","            Environment:","                Variables:","                    SECRETS_COG: !Ref SM2","            Events:","                ApiEventc:","                    Type: Api","                    Properties:","                        RestApiId: !Ref MyApi","                        Path: /cognito/token","                        Method: POST","                        # NOTE: This endpoint is publicly accessible","                        Auth:","                            Authorizer: NONE","      ","","    COGNITOConfirmPass:","        Type: 'AWS::Serverless::Function'","        Properties:","            Runtime: python3.6","            Timeout: 5","            FunctionName: CognitoConfirmForgotPassword_1","            Handler: CognitoConfirmForgotPassword.lambda_handler","            CodeUri:","                Bucket: \"samcloudnative6075\"","                Key: \"CognitoConfirmForgotPassword.zip\"","            Role:","                !Ref ROLEARN2","            Environment:","                Variables:","                    SECRETS_COG: !Ref SM2","            Events:","                ApiEventd: ","                    Type: Api","                    Properties:","                        RestApiId: !Ref MyApi","                        Path: /cognito/confirm-forgot-password","                        Method: POST","                        # NOTE: This endpoint is publicly accessible","                        Auth:","                            Authorizer: MyCognitoAuthorizer","                            AuthorizationScopes:","                                - billing-api/create_billing","",""],"id":74}],[{"start":{"row":6,"column":0},"end":{"row":51,"column":38},"action":"remove","lines":["Parameters:","    VPCRDS:","        Type: 'List<AWS::EC2::VPC::Id>'","        Description: Name of VPC where RDS resides","","","    SG:","        Type: 'List<AWS::EC2::SecurityGroup::Id>'","        Description: Name of Security Group","    ","        ","    SUB:","        Type: 'List<AWS::EC2::Subnet::Id>'","        Description: Name of Subents","","","    ROLEARN1:","        Type: String","        Description: ARN for Database Lambdas","","","    ROLEARN2:","        Type: String","        Description: Role ARN for Cognito Lambdas","","","    AuthName:","        Type: String","        Description: Unique Auth Name for Cognito Resources","","    ","    DBUser: ","        Description: The database admin account username","        Type: String","        MinLength: 1","        MaxLength: 16","        AllowedPattern: \"[a-zA-Z][a-zA-Z0-9]*\"","        ConstraintDescription: must begin with a letter and contain only alphanumeric characters.","        ","        ","    DBPassword:","        Description: The database admin account password","        Type: String","        MinLength: 1","        MaxLength: 41","        AllowedPattern: \"[a-zA-Z0-9]*\""],"id":75}],[{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"remove","lines":["",""],"id":76},{"start":{"row":4,"column":0},"end":{"row":5,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":8,"column":4},"end":{"row":19,"column":6},"action":"remove","lines":["MyApi:","        DependsOn: SM2","        Type: 'AWS::Serverless::Api'","        Properties:","            StageName: dev","            Cors: \"'*'\"","            Auth:","                DefaultAuthorizer: MyCognitoAuthorizer","                Authorizers:","                    MyCognitoAuthorizer:","                        UserPoolArn: !GetAtt UserPool.Arn","      "],"id":77},{"start":{"row":8,"column":0},"end":{"row":8,"column":4},"action":"remove","lines":["    "]},{"start":{"row":7,"column":10},"end":{"row":8,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":7,"column":10},"end":{"row":8,"column":0},"action":"remove","lines":["",""],"id":78}],[{"start":{"row":26,"column":12},"end":{"row":37,"column":60},"action":"remove","lines":["Events:","                ApiEventa:","                    Type: Api","                    Properties:","                        RestApiId: !Ref MyApi","                        Path: /instance/{instance-id}/usage","                        Method: POST","                        # NOTE: This endpoint is publicly accessible","                        Auth:","                            Authorizer: MyCognitoAuthorizer","                            AuthorizationScopes:","                                - billing-api/create_billing"],"id":79},{"start":{"row":26,"column":8},"end":{"row":26,"column":12},"action":"remove","lines":["    "]},{"start":{"row":26,"column":4},"end":{"row":26,"column":8},"action":"remove","lines":["    "]},{"start":{"row":26,"column":0},"end":{"row":26,"column":4},"action":"remove","lines":["    "]},{"start":{"row":25,"column":40},"end":{"row":26,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":23,"column":12},"end":{"row":25,"column":40},"action":"remove","lines":["Environment:","                Variables:","                    SECRETS_DB: !Ref SM1"],"id":80},{"start":{"row":23,"column":8},"end":{"row":23,"column":12},"action":"remove","lines":["    "]},{"start":{"row":23,"column":4},"end":{"row":23,"column":8},"action":"remove","lines":["    "]},{"start":{"row":23,"column":0},"end":{"row":23,"column":4},"action":"remove","lines":["    "]},{"start":{"row":22,"column":35},"end":{"row":23,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":18,"column":12},"end":{"row":22,"column":35},"action":"remove","lines":["Role:","                !Ref ROLEARN1","            VpcConfig:","                SecurityGroupIds: !Ref SG","                SubnetIds: !Ref SUB"],"id":81},{"start":{"row":18,"column":8},"end":{"row":18,"column":12},"action":"remove","lines":["    "]},{"start":{"row":18,"column":4},"end":{"row":18,"column":8},"action":"remove","lines":["    "]},{"start":{"row":18,"column":0},"end":{"row":18,"column":4},"action":"remove","lines":["    "]},{"start":{"row":17,"column":38},"end":{"row":18,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":14,"column":31},"end":{"row":14,"column":32},"action":"remove","lines":["r"],"id":82},{"start":{"row":14,"column":30},"end":{"row":14,"column":31},"action":"remove","lines":["e"]},{"start":{"row":14,"column":29},"end":{"row":14,"column":30},"action":"remove","lines":["y"]},{"start":{"row":14,"column":28},"end":{"row":14,"column":29},"action":"remove","lines":["a"]},{"start":{"row":14,"column":27},"end":{"row":14,"column":28},"action":"remove","lines":["L"]},{"start":{"row":14,"column":26},"end":{"row":14,"column":27},"action":"remove","lines":["_"]},{"start":{"row":14,"column":25},"end":{"row":14,"column":26},"action":"remove","lines":["e"]},{"start":{"row":14,"column":24},"end":{"row":14,"column":25},"action":"remove","lines":["g"]},{"start":{"row":14,"column":23},"end":{"row":14,"column":24},"action":"remove","lines":["a"]},{"start":{"row":14,"column":22},"end":{"row":14,"column":23},"action":"remove","lines":["s"]},{"start":{"row":14,"column":21},"end":{"row":14,"column":22},"action":"remove","lines":["U"]}],[{"start":{"row":14,"column":21},"end":{"row":14,"column":22},"action":"insert","lines":["s"],"id":83},{"start":{"row":14,"column":22},"end":{"row":14,"column":23},"action":"insert","lines":["o"]},{"start":{"row":14,"column":23},"end":{"row":14,"column":24},"action":"insert","lines":["m"]},{"start":{"row":14,"column":24},"end":{"row":14,"column":25},"action":"insert","lines":["e"]}],[{"start":{"row":30,"column":12},"end":{"row":72,"column":0},"action":"remove","lines":["Role:","                !Ref ROLEARN1","            VpcConfig:","                SecurityGroupIds: !Ref SG","                SubnetIds: !Ref SUB","            Environment:","                Variables:","                    SECRETS_DB: !Ref SM1","            Events:","                ApiEventb:","                    Type: Api","                    Properties:","                        RestApiId: !Ref MyApi","                        Path: /instance/{instance-id}/usage","                        Method: GET","                        # NOTE: This endpoint is publicly accessible","                        Auth:","                            Authorizer: MyCognitoAuthorizer","                            AuthorizationScopes:","                                - billing-api/create_billing","","","    RDSCreateTable:","        Type: 'AWS::Serverless::Function'","        Properties:","            Runtime: python3.6","            Timeout: 20","            FunctionName: createdb_1","            Handler: createdb.lambda_handler","            CodeUri:","                Bucket: \"samcloudnative6075\"","                Key: \"createdb.zip\"","            Role:","                !Ref ROLEARN1","            VpcConfig:","                SecurityGroupIds: !Ref SG","                SubnetIds: !Ref SUB","            Environment:","                Variables:","                    SECRETS_DB: !Ref SM1","","",""],"id":84}],[{"start":{"row":30,"column":8},"end":{"row":30,"column":12},"action":"remove","lines":["    "],"id":85},{"start":{"row":30,"column":4},"end":{"row":30,"column":8},"action":"remove","lines":["    "]},{"start":{"row":30,"column":0},"end":{"row":30,"column":4},"action":"remove","lines":["    "]},{"start":{"row":29,"column":30},"end":{"row":30,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":28,"column":16},"end":{"row":29,"column":30},"action":"remove","lines":["Bucket: \"samcloudnative6075\"","                Key: \"Get.zip\""],"id":86},{"start":{"row":28,"column":12},"end":{"row":28,"column":16},"action":"remove","lines":["    "]},{"start":{"row":28,"column":8},"end":{"row":28,"column":12},"action":"remove","lines":["    "]},{"start":{"row":28,"column":4},"end":{"row":28,"column":8},"action":"remove","lines":["    "]},{"start":{"row":28,"column":0},"end":{"row":28,"column":4},"action":"remove","lines":["    "]},{"start":{"row":27,"column":20},"end":{"row":28,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":27,"column":20},"end":{"row":27,"column":21},"action":"insert","lines":[" "],"id":87},{"start":{"row":27,"column":21},"end":{"row":27,"column":22},"action":"insert","lines":["l"]},{"start":{"row":27,"column":22},"end":{"row":27,"column":23},"action":"insert","lines":["a"]},{"start":{"row":27,"column":23},"end":{"row":27,"column":24},"action":"insert","lines":["m"]}],[{"start":{"row":27,"column":24},"end":{"row":27,"column":25},"action":"insert","lines":["2"],"id":88}],[{"start":{"row":27,"column":25},"end":{"row":27,"column":26},"action":"insert","lines":["/"],"id":89}],[{"start":{"row":26,"column":23},"end":{"row":26,"column":24},"action":"remove","lines":["t"],"id":90},{"start":{"row":26,"column":22},"end":{"row":26,"column":23},"action":"remove","lines":["e"]},{"start":{"row":26,"column":21},"end":{"row":26,"column":22},"action":"remove","lines":["G"]}],[{"start":{"row":26,"column":21},"end":{"row":26,"column":22},"action":"insert","lines":["l"],"id":91},{"start":{"row":26,"column":22},"end":{"row":26,"column":23},"action":"insert","lines":["a"]},{"start":{"row":26,"column":23},"end":{"row":26,"column":24},"action":"insert","lines":["m"]}],[{"start":{"row":16,"column":16},"end":{"row":17,"column":38},"action":"remove","lines":["Bucket: \"samcloudnative6075\"","                Key: \"Usage_Layer.zip\""],"id":92},{"start":{"row":16,"column":12},"end":{"row":16,"column":16},"action":"remove","lines":["    "]},{"start":{"row":16,"column":8},"end":{"row":16,"column":12},"action":"remove","lines":["    "]},{"start":{"row":16,"column":4},"end":{"row":16,"column":8},"action":"remove","lines":["    "]},{"start":{"row":16,"column":0},"end":{"row":16,"column":4},"action":"remove","lines":["    "]},{"start":{"row":15,"column":20},"end":{"row":16,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":15,"column":20},"end":{"row":15,"column":21},"action":"insert","lines":["l"],"id":93},{"start":{"row":15,"column":21},"end":{"row":15,"column":22},"action":"insert","lines":["a"]},{"start":{"row":15,"column":22},"end":{"row":15,"column":23},"action":"insert","lines":["m"]},{"start":{"row":15,"column":23},"end":{"row":15,"column":24},"action":"insert","lines":["1"]}],[{"start":{"row":15,"column":24},"end":{"row":15,"column":25},"action":"insert","lines":["/"],"id":94}],[{"start":{"row":13,"column":26},"end":{"row":13,"column":43},"action":"remove","lines":["RDS_POST_Lambda_1"],"id":95},{"start":{"row":13,"column":26},"end":{"row":13,"column":27},"action":"insert","lines":["t"]},{"start":{"row":13,"column":27},"end":{"row":13,"column":28},"action":"insert","lines":["e"]},{"start":{"row":13,"column":28},"end":{"row":13,"column":29},"action":"insert","lines":["s"]},{"start":{"row":13,"column":29},"end":{"row":13,"column":30},"action":"insert","lines":["t"]},{"start":{"row":13,"column":30},"end":{"row":13,"column":31},"action":"insert","lines":["1"]}],[{"start":{"row":23,"column":26},"end":{"row":23,"column":39},"action":"remove","lines":["Get_request_1"],"id":96},{"start":{"row":23,"column":26},"end":{"row":23,"column":27},"action":"insert","lines":["t"]},{"start":{"row":23,"column":27},"end":{"row":23,"column":28},"action":"insert","lines":["e"]},{"start":{"row":23,"column":28},"end":{"row":23,"column":29},"action":"insert","lines":["s"]},{"start":{"row":23,"column":29},"end":{"row":23,"column":30},"action":"insert","lines":["t"]},{"start":{"row":23,"column":30},"end":{"row":23,"column":31},"action":"insert","lines":["2"]}],[{"start":{"row":18,"column":4},"end":{"row":18,"column":10},"action":"remove","lines":["RDSGET"],"id":97}],[{"start":{"row":18,"column":10},"end":{"row":18,"column":11},"action":"insert","lines":["2"],"id":98}],[{"start":{"row":8,"column":4},"end":{"row":8,"column":11},"action":"remove","lines":["RDSPOST"],"id":99}],[{"start":{"row":8,"column":10},"end":{"row":8,"column":11},"action":"insert","lines":["2"],"id":100}],[{"start":{"row":15,"column":25},"end":{"row":15,"column":26},"action":"insert","lines":["s"],"id":101},{"start":{"row":15,"column":26},"end":{"row":15,"column":27},"action":"insert","lines":["o"]},{"start":{"row":15,"column":27},"end":{"row":15,"column":28},"action":"insert","lines":["m"]},{"start":{"row":15,"column":28},"end":{"row":15,"column":29},"action":"insert","lines":["e"]},{"start":{"row":15,"column":29},"end":{"row":15,"column":30},"action":"insert","lines":["."]},{"start":{"row":15,"column":30},"end":{"row":15,"column":31},"action":"insert","lines":["p"]},{"start":{"row":15,"column":31},"end":{"row":15,"column":32},"action":"insert","lines":["y"]}],[{"start":{"row":25,"column":26},"end":{"row":25,"column":27},"action":"insert","lines":["i"],"id":102},{"start":{"row":25,"column":27},"end":{"row":25,"column":28},"action":"insert","lines":["a"]},{"start":{"row":25,"column":28},"end":{"row":25,"column":29},"action":"insert","lines":["m"]},{"start":{"row":25,"column":29},"end":{"row":25,"column":30},"action":"insert","lines":["."]},{"start":{"row":25,"column":30},"end":{"row":25,"column":31},"action":"insert","lines":["p"]}],[{"start":{"row":25,"column":31},"end":{"row":25,"column":32},"action":"insert","lines":["y"],"id":103}],[{"start":{"row":15,"column":20},"end":{"row":15,"column":21},"action":"insert","lines":[" "],"id":104}],[{"start":{"row":15,"column":32},"end":{"row":15,"column":33},"action":"remove","lines":["y"],"id":105},{"start":{"row":15,"column":31},"end":{"row":15,"column":32},"action":"remove","lines":["p"]},{"start":{"row":15,"column":30},"end":{"row":15,"column":31},"action":"remove","lines":["."]},{"start":{"row":15,"column":29},"end":{"row":15,"column":30},"action":"remove","lines":["e"]},{"start":{"row":15,"column":28},"end":{"row":15,"column":29},"action":"remove","lines":["m"]},{"start":{"row":15,"column":27},"end":{"row":15,"column":28},"action":"remove","lines":["o"]},{"start":{"row":15,"column":26},"end":{"row":15,"column":27},"action":"remove","lines":["s"]}],[{"start":{"row":25,"column":31},"end":{"row":25,"column":32},"action":"remove","lines":["y"],"id":106},{"start":{"row":25,"column":30},"end":{"row":25,"column":31},"action":"remove","lines":["p"]},{"start":{"row":25,"column":29},"end":{"row":25,"column":30},"action":"remove","lines":["."]},{"start":{"row":25,"column":28},"end":{"row":25,"column":29},"action":"remove","lines":["m"]},{"start":{"row":25,"column":27},"end":{"row":25,"column":28},"action":"remove","lines":["a"]}],[{"start":{"row":25,"column":26},"end":{"row":25,"column":27},"action":"remove","lines":["i"],"id":107}],[{"start":{"row":8,"column":10},"end":{"row":8,"column":11},"action":"remove","lines":["2"],"id":108}],[{"start":{"row":8,"column":11},"end":{"row":8,"column":12},"action":"insert","lines":["1"],"id":109}],[{"start":{"row":8,"column":11},"end":{"row":8,"column":12},"action":"remove","lines":["1"],"id":110}],[{"start":{"row":8,"column":10},"end":{"row":8,"column":11},"action":"remove","lines":[":"],"id":111}],[{"start":{"row":8,"column":10},"end":{"row":8,"column":11},"action":"insert","lines":["1"],"id":112},{"start":{"row":8,"column":11},"end":{"row":8,"column":12},"action":"insert","lines":[":"]}]]},"ace":{"folds":[],"scrolltop":90,"scrollleft":0,"selection":{"start":{"row":18,"column":12},"end":{"row":18,"column":12},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1590409454932,"hash":"cb0966c65e4bb438d11ac3daa8ba6afd372f6081"}